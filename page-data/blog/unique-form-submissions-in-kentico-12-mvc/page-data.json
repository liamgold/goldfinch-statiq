{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/unique-form-submissions-in-kentico-12-mvc/","result":{"data":{"kontentItemBlogDetail":{"elements":{"url_slug":{"value":"unique-form-submissions-in-kentico-12-mvc"},"base__title":{"value":"Unique form submissions in Kentico 12 MVC"},"base__teaser_image":{"value":[{"url":"https://assets-us-01.kc-usercontent.com:443/1bb6bba8-9f04-4be8-88c3-46cbb47bbc97/0875d92a-44d0-428f-a81a-9043aa7ae1fb/form.PNG"}]},"seo__meta_title":{"value":"Unique form submissions in Kentico 12 MVC"},"seo__meta_description":{"value":"When adding forms to websites, there may be occasions where you might prefer to restrict form respondents from making multiple form submissions."},"seo__canonical_url":{"value":""},"body_copy":{"value":"<p>When adding forms to websites, there may be occasions where you might prefer to restrict form respondents from making multiple form submissions. It could be that your form represents a method of signing up for an event, registering interest in a topic or webinar, or you might simply prefer that the same email address isn't associated with multiple form submissions.</p>\n<p>This topic popped up recently as a question on the <a href=\"https://devnet.kentico.com/questions-answers\" data-new-window=\"true\" target=\"_blank\" rel=\"noopener noreferrer\">Questions &amp; Answers</a> section of the <a href=\"https://devnet.kentico.com\" data-new-window=\"true\" target=\"_blank\" rel=\"noopener noreferrer\">Xperience DevNet</a> portal. If you are new to developing Xperience websites, or you find you are having trouble implementing a certain feature of Xperience, then I highly recommend submitting questions on the Q&amp;A section of DevNet. You can get really good solutions and detailed explanations from the Xperience community, including answers from <a href=\"https://xperience.io/partnership/mvp-program\" data-new-window=\"true\" target=\"_blank\" rel=\"noopener noreferrer\">Xperience MVPs</a> and members of the Kentico Support team.</p>\n<p>For this question in particular, I provided sample code which can be used in your Xperience MVC site. This module intercepts a form submission, checks for fields containing the keyword email, and compares the values submitted against values from other submissions to find a match. &nbsp;If it finds a match then the form submission is cancelled and an error is displayed, otherwise the form continues to process as you would expect. &nbsp;You can find the sample code below:</p>\n<object type=\"application/kenticocloud\" data-type=\"item\" data-rel=\"component\" data-codename=\"n223fdab6_e1a6_01e6_f5ad_7eb806a5f531\"></object>","modular_content":[{"__typename":"kontent_item_code_block","elements":{"language":{"value":[{"codename":"csharp"}]},"code":{"value":"using CMS;\nusing CMS.DataEngine;\nusing CMS.OnlineForms;\nusing DancingGoat.GlobalEvents;\nusing System.Linq;\n\n[assembly: RegisterModule(typeof(FormGlobalEventsModule))]\nnamespace DancingGoat.GlobalEvents\n{\n    public class FormGlobalEventsModule : Module\n    {\n        public FormGlobalEventsModule() : base(\"DancingGoat.FormGlobalEventsModule\")\n        {\n        }\n\n        protected override void OnInit()\n        {\n            base.OnInit();\n\n            // Register custom events\n            BizFormItemEvents.Insert.Before += Insert_Before;\n        }\n\n        private void Insert_Before(object sender, BizFormItemEventArgs e)\n        {\n            var item = e.Item;\n\n            // Sanity check to ensure we actually have a bizform item.\n            if (item == null)\n            {\n                return;\n            }\n\n            // Get all column names that contain email.\n            var columnNames = item.ColumnNames.Where(x => x.ToLowerInvariant().Contains(\"email\"));\n\n            // Loop over all column names containing the keyword email.\n            foreach (var columnName in columnNames)\n            {\n                // Get the submitted email address value.\n                var email = item.GetStringValue(columnName, string.Empty);\n\n                // Lookup the current bizform for submissions with the same field value.\n                var existingEntry = BizFormItemProvider.GetItems(e.Item.BizFormClassName)\n                    .Column(columnName)\n                    .TopN(1)\n                    .WhereEquals(columnName, email)\n                    .FirstOrDefault();\n\n                // If it already exists, cancel it (displays an error on the MVC site).\n                if (existingEntry != null)\n                {\n                    e.Cancel();\n                }\n            }\n        }\n    }\n}"}},"system":{"id":"223fdab6-e1a6-01e6-f5ad-7eb806a5f531","codename":"n223fdab6_e1a6_01e6_f5ad_7eb806a5f531","type":"code_block"}}],"links":[]}},"system":{"id":"be6b9e26-5c69-4d02-a5ce-1ba7fdbba19a"}}},"pageContext":{"slug":"unique-form-submissions-in-kentico-12-mvc"}},"staticQueryHashes":["3897982121"]}