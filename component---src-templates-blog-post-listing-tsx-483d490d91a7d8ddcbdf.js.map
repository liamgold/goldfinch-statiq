{"version":3,"sources":["webpack:///./src/utils/devices.ts","webpack:///./src/components/blog/BlogCard.tsx","webpack:///./src/components/shared/Pagination.tsx","webpack:///./src/templates/BlogPostListing.tsx"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","DateBlock","styled","span","BlogCard","className","blog","date","Date","elements","post_date","value","formattedDate","Intl","DateTimeFormat","year","month","day","format","to","url_slug","base__title","summary","props","theme","colour","grey","Pagination","baseUrl","currentPage","numPages","siteUrl","useStaticQuery","query","site","siteMetadata","isFirst","isLast","prevPage","nextPage","Helmet","rel","href","Array","from","length","_","i","key","BlogList","div","BlogPostListing","data","pageContext","item","kontentItemBlogListing","blogDetails","allKontentItemBlogDetail","Layout","title","seo__meta_title","description","seo__meta_description","edges","map","edge","node","system","id"],"mappings":"mNAAMA,EAOK,SAGEC,EAAS,CACpBC,QAAS,eAVA,QAUF,IACPC,QAAS,eAVA,QAUF,IACPC,QAAS,eAVA,QAUF,IACPC,OAAQ,eAVA,QAUF,IACNC,OAAQ,eAVA,SAUF,IACNC,QAAS,eAVA,SAUF,IACPC,QAAS,eAAeR,EAAjB,IACPS,SAAU,eAAeT,EAAjB,K,qVCNV,IAAMU,EAAYC,IAAOC,KAAV,KAkCAC,EAbEF,aAjBmC,SAAC,GAAwB,oBAAtBG,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC1DC,EAAO,IAAIC,MAAKF,SAAA,UAAAA,EAAMG,gBAAN,mBAAgBC,iBAAhB,eAA2BC,QAAS,IACpDC,EAAgB,IAAIC,KAAKC,eAAe,UAAW,CACvDC,KAAM,UACNC,MAAO,UACPC,IAAK,YACJC,OAAOX,GAEV,OACE,yBAAKF,UAAWA,GACd,kBAAC,OAAD,CAAMc,GAAE,UAAWb,SAAX,UAAWA,EAAMG,gBAAjB,iBAAW,EAAgBW,gBAA3B,aAAW,EAA0BT,OAArC,KAAgDL,SAAxD,UAAwDA,EAAMG,gBAA9D,iBAAwD,EAAgBY,mBAAxE,aAAwD,EAA6BV,OACrF,kBAACV,EAAD,QAAeW,GACf,2BAAIN,SAAJ,UAAIA,EAAMG,gBAAV,iBAAI,EAAgBa,eAApB,aAAI,EAAyBX,UAKlBT,CAAH,KAGQ,SAAAqB,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,OAKvClC,EAAOI,Q,8QC3BlB,IA0De+B,EAfIzB,aA3CmC,SAAC,GAAkD,IAAhDG,EAAgD,EAAhDA,UAAWuB,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGhFC,EAFSC,yBAAeC,GAAxBC,KAEiBC,aAAjBJ,QAEFK,EAA0B,IAAhBP,EACVQ,EAASR,IAAgBC,EACzBQ,EAAWT,EAAc,GAAM,EAApB,GAA2BD,EAA3B,GAA0CA,GAAUC,EAAc,GAAlE,IACXU,EAAW,GAAGX,GAAUC,EAAc,GAA9B,IAEd,OACE,kBAAC,WAAD,KACE,kBAACW,EAAA,OAAD,MACIJ,GAAW,0BAAMK,IAAI,OAAOC,KAAI,GAAKX,EAAUO,KAC/CD,GAAU,0BAAMI,IAAI,OAAOC,KAAI,GAAKX,EAAUQ,KAElD,yBAAKlC,UAAWA,GACd,6BACI+B,GACA,4BACE,kBAAC,OAAD,CAAMjB,GAAImB,EAAUG,IAAI,QAAxB,aAKHE,MAAMC,KAAK,CAAEC,OAAQf,IAAY,SAACgB,EAAGC,GAAJ,OAChC,wBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,kBAAC,OAAD,CAAM5B,GAAOS,GAAgB,IAANmB,EAAU,GAAQA,EAAI,EAAtB,MAA+BA,EAAI,QAG5DV,GACA,4BACE,kBAAC,OAAD,CAAMlB,GAAIoB,EAAUE,IAAI,QAAxB,cAWKvC,CAAH,KAiBH+B,EAAQ,Y,gJCvCrB,IAAMgB,EAAW/C,IAAOgD,IAAV,KAmCDjB,GAFEkB,UA3B2C,SAAC,GAA0B,gBAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC3DC,EAAOF,EAAKG,uBACZC,EAAcJ,EAAKK,yBAEzB,IAAKH,EACH,OAAO,KAL0E,IAQ3EzB,EAA0BwB,EAA1BxB,YAAaC,EAAauB,EAAbvB,SAErB,OACE,kBAAC4B,EAAA,EAAD,CAAQC,MAAOL,SAAF,UAAEA,EAAM7C,gBAAR,iBAAE,EAAgBmD,uBAAlB,aAAE,EAAiCjD,MAAOkD,YAAaP,SAAF,UAAEA,EAAM7C,gBAAR,iBAAE,EAAgBqD,6BAAlB,aAAE,EAAuCnD,OACzG,6BACE,4BAAK2C,SAAL,UAAKA,EAAM7C,gBAAX,iBAAK,EAAgBY,mBAArB,aAAK,EAA6BV,OAElC,kBAACsC,EAAD,KACGO,EAAYO,MAAMC,KAAI,SAAAC,GACrB,IAAM3D,EAAO2D,aAAH,EAAGA,EAAMC,KACnB,OAAO,kBAAC,EAAD,CAAUlB,IAAK1C,EAAK6D,OAAOC,GAAI9D,KAAMA,QAGhD,kBAAC,EAAD,CAAYsB,QAAQ,SAASC,YAAaA,EAAaC,SAAUA,OAQpD","file":"component---src-templates-blog-post-listing-tsx-483d490d91a7d8ddcbdf.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'gatsby';\n\nimport { styled } from '@utils/theme';\nimport { device } from '@utils/devices';\nimport { BlogDetail } from '@models/BlogDetail';\n\ninterface BlogCardProps {\n  className?: string;\n  blog: BlogDetail;\n}\n\nconst DateBlock = styled.span`\n  font-size: 14px;\n`;\n\nconst Container: FunctionComponent<BlogCardProps> = ({ className, blog }) => {\n  const date = new Date(blog?.elements?.post_date?.value || '');\n  const formattedDate = new Intl.DateTimeFormat('default', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  }).format(date);\n\n  return (\n    <div className={className}>\n      <Link to={`/blog/${blog?.elements?.url_slug?.value}/`}>{blog?.elements?.base__title?.value}</Link>\n      <DateBlock>{`${formattedDate}`}</DateBlock>\n      <p>{blog?.elements?.summary?.value}</p>\n    </div>\n  );\n};\n\nconst BlogCard = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.theme.colour.grey};\n  padding: 25px;\n  border-radius: 8px;\n  margin-bottom: 25px;\n\n  @media ${device.tablet} {\n    flex: 0 1 49%;\n  }\n`;\n\nexport default BlogCard;\n","import React, { Fragment, FunctionComponent } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'gatsby';\n\nimport { styled } from '@utils/theme';\n\ninterface PaginationProps {\n  className?: string;\n  baseUrl: string;\n  currentPage: number;\n  numPages: number;\n}\n\nconst Container: FunctionComponent<PaginationProps> = ({ className, baseUrl, currentPage, numPages }) => {\n  const { site } = useStaticQuery(query);\n\n  const { siteUrl } = site.siteMetadata;\n\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? `${baseUrl}` : `${baseUrl}${currentPage - 1}/`;\n  const nextPage = `${baseUrl}${currentPage + 1}/`;\n\n  return (\n    <Fragment>\n      <Helmet>\n        {!isFirst && <link rel=\"prev\" href={`${siteUrl}${prevPage}`} />}\n        {!isLast && <link rel=\"next\" href={`${siteUrl}${nextPage}`} />}\n      </Helmet>\n      <div className={className}>\n        <ul>\n          {!isFirst && (\n            <li>\n              <Link to={prevPage} rel=\"prev\">\n                Previous\n              </Link>\n            </li>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li key={`pagination-number${i + 1}`}>\n              <Link to={`${baseUrl}${i === 0 ? '' : `${i + 1}/`}`}>{i + 1}</Link>\n            </li>\n          ))}\n          {!isLast && (\n            <li>\n              <Link to={nextPage} rel=\"next\">\n                Next\n              </Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nconst Pagination = styled(Container)`\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n\n    li {\n      margin: 0 0 0 15px;\n    }\n  }\n`;\n\nexport default Pagination;\n\nexport const query = graphql`\n  query Pagination {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\n\nimport { styled } from '@utils/theme';\nimport Layout from '@components/Layout';\nimport { BlogListing } from '@models/BlogListing';\nimport { BlogDetail } from '@models/BlogDetail';\nimport BlogCard from '@components/blog/BlogCard';\nimport Pagination from '@components/shared/Pagination';\n\ninterface BlogListProps {\n  data: BlogListResult;\n  pageContext: BlogListPageContext;\n}\n\ninterface BlogListPageContext {\n  currentPage: number;\n  limit: number;\n  numPages: number;\n  skip: number;\n}\n\ninterface BlogListResult {\n  kontentItemBlogListing: BlogListing;\n  allKontentItemBlogDetail: BlogEdges;\n}\n\ninterface BlogEdges {\n  edges: BlogNode[];\n}\n\ninterface BlogNode {\n  node: BlogDetail;\n}\n\nconst BlogList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BlogPostListing: FunctionComponent<BlogListProps> = ({ data, pageContext }) => {\n  const item = data.kontentItemBlogListing;\n  const blogDetails = data.allKontentItemBlogDetail;\n\n  if (!item) {\n    return null;\n  }\n\n  const { currentPage, numPages } = pageContext;\n\n  return (\n    <Layout title={item?.elements?.seo__meta_title?.value} description={item?.elements?.seo__meta_description?.value}>\n      <div>\n        <h1>{item?.elements?.base__title?.value}</h1>\n\n        <BlogList>\n          {blogDetails.edges.map(edge => {\n            const blog = edge?.node;\n            return <BlogCard key={blog.system.id} blog={blog} />;\n          })}\n        </BlogList>\n        <Pagination baseUrl=\"/blog/\" currentPage={currentPage} numPages={numPages} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPostListing;\n\nexport const query = graphql`\n  query BlogListQuery($skip: Int!, $limit: Int!) {\n    kontentItemBlogListing {\n      elements {\n        base__title {\n          value\n        }\n        seo__meta_description {\n          value\n        }\n        seo__meta_title {\n          value\n        }\n      }\n    }\n    allKontentItemBlogDetail(sort: { fields: elements___post_date___value, order: DESC }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          elements {\n            base__title {\n              value\n            }\n            base__teaser_image {\n              value {\n                url\n              }\n            }\n            post_date {\n              value\n            }\n            summary {\n              value\n            }\n            url_slug {\n              value\n            }\n          }\n          system {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}